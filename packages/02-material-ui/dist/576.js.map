{"version":3,"sources":["webpack://02-material-ui/./src/Dialog.jsx","webpack://02-material-ui/./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack://02-material-ui/./src/theme.js","webpack://02-material-ui/./src/MuiDefaultPage.js","webpack://02-material-ui/./src/Routes.js","webpack://02-material-ui/./src/App.jsx","webpack://02-material-ui/./src/bootstrap.jsx"],"names":["open","setOpen","React","handleClose","variant","color","onClick","onClose","autoFocus","props","children","localTheme","theme","outerTheme","useTheme","output","_extends","mergeOuterLocalTheme","nested","ThemeContext","value","createMuiTheme","palette","primary","green","Dialog","Switch","Route","exact","path","AppContainer","fallback","routes","Routes","ReactDOM","document","getElementById"],"mappings":"0OAgDE,QAvCF,WACI,MAAOA,EAAMC,GAAWC,cAAe,GAMjCC,EAAc,KAClBF,GAAQ,IAGV,OACE,6BACE,kBAAC,IAAD,CAAQG,QAAQ,YAAYC,MAAM,UAAUC,QAVxB,KACtBL,GAAQ,KASN,eAGA,kBAAC,IAAD,CAAQD,KAAMA,EAAMO,QAASJ,GAC3B,kBAAC,IAAD,uBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,qEACgE,IAC9D,wCAFF,MAKF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,QAASH,EACTC,QAAQ,YACRC,MAAM,UACNG,WAAS,GAJX,a,yICqCZ,QAzCA,SAAuBC,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAaF,EAAMG,MACnBC,GAAaC,SAQbF,EAAQV,aAAc,WACxB,IAAIa,EAAwB,OAAfF,EAAsBF,EAlCvC,SAA8BE,EAAYF,GACxC,MAA0B,mBAAfA,EACSA,EAAWE,IAWxBG,QAASA,OAAS,GAAIH,GAAaF,GAqBQM,CAAqBJ,EAAYF,GAMjF,OAJc,MAAVI,IACFA,EAAOG,KAAyB,OAAfL,GAGZE,IACN,CAACJ,EAAYE,IAChB,OAAoBX,kBAAoBiB,aAAuB,CAC7DC,MAAOR,GACNF,I,wBCjDE,MAAME,GAAQS,OAAe,CAClCC,QAAS,CAAEC,QAASC,O,cCctB,QAXA,WACI,OACI,kBAAC,EAAD,CAAeZ,MAAOA,GAClB,6BACI,+CACA,kBAACa,EAAA,QAAD,SCChB,EARe,IACX,kBAAC,EAAAC,OAAD,KACI,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,QCLNC,EAAe5B,SAAW,IAAM,mCAYtC,EAVY,IAEJ,6BACI,kBAAC,aAAD,CAAgB6B,SAAS,mCACrB,kBAACD,EAAD,CAAcE,OAAQC,M,oBCLtCC,UAAgB,kBAAC,EAAD,MAASC,SAASC,eAAe","file":"576.js","sourcesContent":["import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction DialogComponent() {\n    const [open, setOpen] = React.useState(false);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    return (\n      <div>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n          Open Dialog\n        </Button>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>Dialog Example</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              This is a dialog from the Material UI app rendered in a React{\" \"}\n              <code>Portal</code>.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              variant=\"contained\"\n              color=\"primary\"\n              autoFocus\n            >\n              Woot\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  \n  export default DialogComponent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends(_extends({}, outerTheme), localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import { createMuiTheme } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: { primary: green }\n});","import React from 'react'\nimport { ThemeProvider } from \"@material-ui/core\";\n\nimport { theme } from \"./theme\";\nimport Dialog from \"./Dialog\";\n\n\nfunction MainPage() {\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <h1>Material UI App</h1>\n                <Dialog />\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default MainPage","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport StartPage from \"./MuiDefaultPage\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\">\n            <StartPage />\n        </Route>\n    </Switch>\n);\n\nexport default Routes;","import React from \"react\";\nimport Routes from './Routes';\n\nconst AppContainer = React.lazy(() => import(\"app_one/AppContainer\"));\n\nconst App = () => {\n    return (\n        <div>\n            <React.Suspense fallback=\"Loading App Container from Host\">\n                <AppContainer routes={Routes}/>\n            </React.Suspense>\n        </div>\n    );\n}\n\nexport default App;","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}